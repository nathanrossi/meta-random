CONF_VERSION = "2"

# machines
# MACHINE ?= "qemuarm"
# MACHINE ?= "qemuarm64"
# MACHINE ?= "qemux86"
# MACHINE ?= "qemux86-64"
# MACHINE ?= "qemumips"
# MACHINE ?= "qemumips64"
# MACHINE ?= "qemuppc"
# MACHINE ?= "qemuriscv64"

# MACHINE ?= "picosoc"
# MACHINE ?= "versa-ecp5"
# MACHINE ?= "fomu"

# MACHINE ?= "qemuor1k"
# MACHINE ?= "qemuriscv32"
# MACHINE ?= "qemuriscv64"

# MACHINE ?= "raspberrypi-mainline"
# MACHINE ?= "raspberrypi0-mainline"
# MACHINE ?= "raspberrypi3-b-plus"
# MACHINE ?= "raspberrypi4-b"
# MACHINE ?= "print-net-camera"
# MACHINE ?= "beaglebone-yocto"
# MACHINE ?= "raspberrypi3"
# MACHINE ?= "sg3100"

# image content
EXTRA_IMAGE_FEATURES = "debug-tweaks"

# image type
# IMAGE_FSTYPES:append = " tar.bz2 "
# IMAGE_FSTYPES:append = " ext4 "
# IMAGE_FSTYPES:append = " cpio.gz "

INHERIT += "rm_work"

# TCLIBC = "musl"
# TCLIBC = "uclibc-ng"

# DISTRO
# DISTRO = "rossihq-server"
# DISTRO = "multitool"
# DISTRO = "remotebox"
# DISTRO = "poky"

# PREFERRED_PROVIDER_virtual/kernel = "linux-mainline"
# PREFERRED_PROVIDER_virtual/kernel = "linux-versa-ecp5-vexriscv"

# image content
# CORE_IMAGE_EXTRA_INSTALL += "toolchain-tests"
# CORE_IMAGE_EXTRA_INSTALL += "tests-glib"
# CORE_IMAGE_EXTRA_INSTALL += "kernel-modules"
# CORE_IMAGE_EXTRA_INSTALL += "strace"
# CORE_IMAGE_EXTRA_INSTALL += "iw"

# IMAGE_FEATURES += "ssh-server-openssh"

# PACKAGE_INSTALL:append = " usbutils ethtool "
# PACKAGE_INSTALL:append = " pciutils "
# PACKAGE_INSTALL:append = " util-linux "
# PACKAGE_INSTALL:append = " lsscsi "
# PACKAGE_INSTALL:append = " e2fsprogs "
# PACKAGE_INSTALL:append = " dosfstools "
# PACKAGE_INSTALL:append = " i2c-tools "
# PACKAGE_INSTALL:append = " fio "
# PACKAGE_INSTALL:append = " python3 "
# PACKAGE_INSTALL:append = " bash "
# PACKAGE_INSTALL:append = " iperf3 "
# PACKAGE_INSTALL:append = " kernel-modules "
# PACKAGE_INSTALL:append = " devmem2 "
# PACKAGE_INSTALL:append = " python3-core python3-spidev "
# PACKAGE_INSTALL:append = " openssh-pregenerate "
# PACKAGE_INSTALL:append = " openssh-sftp-server "
# PACKAGE_INSTALL:append = " mjpg-streamer v4l-utils "
# PACKAGE_INSTALL:append = " kernel-module-uvcvideo "
# PACKAGE_INSTALL:append = " memtester "

# PACKAGE_INSTALL:append = " libdrm-tests "
# PACKAGE_INSTALL:append = " fbida "

# LICENSE_FLAGS_ACCEPTED += "commercial"
# PACKAGE_INSTALL:append = " ffmpeg "

# LICENSE_FLAGS_WHITELIST:pn-ffmpeg = "commercial"
# PACKAGE_INSTALL:append = " ffmpeg v4l-utils "

# install custom overlay
# do_image_wic[depends] += "rpi-device-tree:do_deploy"
# IMAGE_BOOT_FILES:append = " devicetree/bcm2835-rpi-zero-spidev.dtb;bcm2835-rpi-zero-spidev.dtb"
# IMAGE_BOOT_FILES:append = " devicetree/spi1-3cs.dtbo;overlays/spi1-3cs.dtbo"
# RPI_EXTRA_CONFIG:append = "dtoverlay=spi1-3cs\n"
# RPI_EXTRA_CONFIG:append = "device_tree=bcm2835-rpi-zero-spidev.dtb\n"
# RPI_EXTRA_CONFIG:append = "dtoverlay=rpi-uart0-rtscts\n"

# SDK_ARCHIVE_TYPE = "tar.gz"

# ENABLE_UART = "1"
# RPI_EXTRA_CONFIG:append = "dtoverlay=rpi-spi0-fbtft-7789\n"
